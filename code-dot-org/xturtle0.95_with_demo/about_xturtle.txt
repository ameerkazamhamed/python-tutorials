Turtle graphics is a popular way for introducing programming to
kids. It was part of the original Logo programming language developed
by Wally Feurzig and Seymour Papert in 1966.

Imagine a robotic turtle starting at (0, 0) in the x-y plane. Give it
the command turtle.forward(15), and it moves (on-screen!) 15 pixels in
the direction it is facing, drawing a line as it moves. Give it the
command turtle.left(25), and it rotates in-place 25 degrees clockwise.

By combining together these and similar commands, intricate shapes and
pictures can easily be drawn.

===================================================

-----   ABOUT  xturtle.py

===================================================

This module is an extended reimplementation of turtle.py from the
Python standard distribution. (See: http:\\www.python.org)

It tries to keep the merits of turtle.py and to be (nearly) 100%
compatible with it. This means in the first place to enable the
learning programmer to use all the commands, classes and methods
interactively when using the module from within IDLE run with
the -n switch.

Roughly it has the following features added:

- Better animation of the turtle movements, especially of turning the
  turtle. So the turtles can more easily be used as a visual feedback
  instrument by the (beginning) programmer.

- different turtle shapes, gif-images as turtle shapes, user defined
  and user controllable turtle shapes, among them compound
  (multicolored) shapes.

- fine control over turtle movement and screen updates via delay(),
  and enhanced tracer() and speed() methods.

- aliases for the most commonly used commands, like fd for forward etc.,
  following the early Logo traditions. This reduces the boring work of
  typing long sequences of commands, which often occur in a natural way
  when kids try to program fancy pictures on their first encounter with
  turtle graphcis.

- some simple commands/methods for creating event driven programs
  (mouse-, key-, timer-events). Especially useful for programming games.
  
- A scrollable Canvas class. The default scrollable Canvas can be
  extended interactively as needed while playing around with the turtle(s).

- commands for controlling background color or backgorund image.

- The implementation uses a 2-vector class named _Vec, derived from
  tuple. This class can also be imported and used by the programmer,
  which makes certain types of computations very natural and compact.

Behind the scenes there are some features included with possible
extensionsin in mind. These will be commented and documented elsewhere. -

The module comes with a set of examples of different characters and
complexity and a very simple q&d assembled demo viewer.
